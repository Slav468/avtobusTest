@use "sass:math";
@use "./style/normalize.css";
@use "./style/fonts.scss";
@use "./style/variables.scss";
@use "./style/settings.scss" as *;
@use "./style/animations.scss";
@use "./style/common.scss";
@use "./style/components/header.scss";
@use "./style/components/logo.scss";
@use "./style/components/group.scss";
@use "./style/components/toster.scss";
@use "./style/components/menu-group.scss";
@use "./style/components/popup.scss";
@use "./style/elements/buttons.scss";
@use "./style/elements/inputs.scss";
@use "./style/elements/dropdown.scss";

body {
  display: flex;
  min-height: 100dvh;
  min-width: #{$minWidth}px;
  color: $mainColor;
  font-family: $font-family;
  font-size: #{$fontSize}px;
  &.menu-open {
    overflow: hidden;
    &:after {
      content: "";
      width: 100%;
      position: fixed;
      top: 0;
      left: 0;
      height: 100%;
      background-color: #000;
      z-index: 9;
      opacity: 0.5;
    }
  }
}

.wrapper {
  position: relative;
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  overflow: clip;
  background: #f6f7f9;

  > main {
    flex: 1 1 auto;
  }

  > * {
    min-width: 0;
  }
}

[class*="__container"] {
  display: flex;
  @if ($maxWidthContainer>0) {
    max-width: #{$containerWidth}px;
    margin: 0 auto;
  }
  @if ($containerPadding>0) {
    @if ($maxWidthContainer>0) {
      padding-left: #{math.div($containerPadding, 2)}px;
      padding-right: #{math.div($containerPadding, 2)}px;
    } @else {
      @include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
      @include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
    }
  }
}
